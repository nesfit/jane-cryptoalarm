<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="E:/GitHub/jane-cryptoalarm/cryptoalarm-web/laravel/app/Traits" file="Enums.php" realpath="E:/GitHub/jane-cryptoalarm/cryptoalarm-web/laravel/app/Traits/Enums.php" size="3043" time="2019-09-25T17:20:37+00:00" unixtime="1569432037" sha1="2fc4de16e2477a8a1727fa99ff4e3869a69ca9cf" relative="Traits/Enums.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Cryptoalarm</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Traits</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4"/>
  <line no="5">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Illuminate</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Support</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Str</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Cryptoalarm</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Exceptions</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">InvalidEnumException</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="7"/>
  <line no="8">
    <token name="T_TRAIT">trait</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Enums</token>
  </line>
  <line no="9">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="10">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT">     * Enum property getter</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT">     * @param string $field</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT">     * @return mixed|false</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="16">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getEnum</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="17">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="18">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$instance</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="19"/>
  <line no="20">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$instance</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasEnumProperty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="21">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$property</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$instance</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getEnumProperty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="22"/>
  <line no="23">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$instance</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_VARIABLE">$property</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="24">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="25"/>
  <line no="26">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">false</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="27">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="28"/>
  <line no="29">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">     * Check for the presence of a property that starts</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">     *     with enum for the provided attribute</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="33">
    <token name="T_DOC_COMMENT">     * @param string $field</token>
  </line>
  <line no="34">
    <token name="T_DOC_COMMENT">     * @param mixed $value</token>
  </line>
  <line no="35">
    <token name="T_DOC_COMMENT">     * @return $this</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">     * @throws InvalidEnumException</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="38">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">setAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="39">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="40">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">hasEnumProperty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="41">
    <token name="T_WHITESPACE">            </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isValidEnum</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="42">
    <token name="T_WHITESPACE">                </token>
    <token name="T_THROW">throw</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NEW">new</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">InvalidEnumException</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"Invalid value for "</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">::</token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_ENCAPSED_AND_WHITESPACE"> (</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">)</token>
    <token name="T_PHPDOX_DOUBLE_QUOTES">"</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="43">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="44"/>
  <line no="45">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">// if ($this-&gt;isKeyedEnum($field, $value)) {</token>
  </line>
  <line no="46">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">//     $value = $this-&gt;getKeyedEnum($field, $value);</token>
  </line>
  <line no="47">
    <token name="T_WHITESPACE">            </token>
    <token name="T_COMMENT">// }</token>
  </line>
  <line no="48">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="49"/>
  <line no="50">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">parent</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">setAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="51">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="52"/>
  <line no="53">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="54">
    <token name="T_DOC_COMMENT">     * Gets the expected enum property</token>
  </line>
  <line no="55">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="56">
    <token name="T_DOC_COMMENT">     * @param string $field</token>
  </line>
  <line no="57">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="58">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getEnumProperty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="61">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'enum'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Str</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">plural</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">Str</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">studly</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="62">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="63"/>
  <line no="64">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="65">
    <token name="T_DOC_COMMENT">     * Gets the enum value by key</token>
  </line>
  <line no="66">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="67">
    <token name="T_DOC_COMMENT">     * @param string $field</token>
  </line>
  <line no="68">
    <token name="T_DOC_COMMENT">     * @param mixed $key</token>
  </line>
  <line no="69">
    <token name="T_DOC_COMMENT">     * @return mixed</token>
  </line>
  <line no="70">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="71">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getKeyedEnum</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$key</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="72">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="73">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getEnum</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$key</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="74">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="75"/>
  <line no="76">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="77">
    <token name="T_DOC_COMMENT">     * Is an enum property defined for the provided field</token>
  </line>
  <line no="78">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="79">
    <token name="T_DOC_COMMENT">     * @param string $field</token>
  </line>
  <line no="80">
    <token name="T_DOC_COMMENT">     * @return boolean</token>
  </line>
  <line no="81">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="82">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">hasEnumProperty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="83">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="84">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$property</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getEnumProperty</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="85"/>
  <line no="86">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_VARIABLE">$property</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">is_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_VARIABLE">$property</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="87">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="88"/>
  <line no="89">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="90">
    <token name="T_DOC_COMMENT">     * Is the provided value a key in the enum</token>
  </line>
  <line no="91">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="92">
    <token name="T_DOC_COMMENT">     * @param string $field</token>
  </line>
  <line no="93">
    <token name="T_DOC_COMMENT">     * @param mixed $key</token>
  </line>
  <line no="94">
    <token name="T_DOC_COMMENT">     * @return bool</token>
  </line>
  <line no="95">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="96">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">isKeyedEnum</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$key</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="97">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="98">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">in_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$key</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_keys</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getEnum</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="99">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="100"/>
  <line no="101">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="102">
    <token name="T_DOC_COMMENT">     * Is the value a valid enum in any way</token>
  </line>
  <line no="103">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="104">
    <token name="T_DOC_COMMENT">     * @param string $field</token>
  </line>
  <line no="105">
    <token name="T_DOC_COMMENT">     * @param mixed $value</token>
  </line>
  <line no="106">
    <token name="T_DOC_COMMENT">     * @return bool</token>
  </line>
  <line no="107">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="108">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">isValidEnum</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="109">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="110">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isValueEnum</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_OR">||</token>
  </line>
  <line no="111">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">isKeyedEnum</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="112">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="113"/>
  <line no="114">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="115">
    <token name="T_DOC_COMMENT">     * Is the provided value in the enum</token>
  </line>
  <line no="116">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="117">
    <token name="T_DOC_COMMENT">     * @param string $field</token>
  </line>
  <line no="118">
    <token name="T_DOC_COMMENT">     * @param mixed $value</token>
  </line>
  <line no="119">
    <token name="T_DOC_COMMENT">     * @return bool</token>
  </line>
  <line no="120">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="121">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">isValueEnum</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">string</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="122">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="123">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">in_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$value</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getEnum</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$field</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="124">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="125">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
</source>
